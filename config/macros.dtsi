macro_quotes: macro_quotes{
compatible = "zmk,behavior-macro";
label = "macro_quotes";
#binding-cells = <0>;
bindings = <&kp SQT>, <&kp SQT>, <&kp LEFT>;
};
macro_dquotes: macro_dquotes{
compatible = "zmk,behavior-macro";
label = "macro_dquotes";
#binding-cells = <0>;
bindings = <&kp DQT>, <&kp DQT>, <&kp LEFT>;
};
macro_braces: macro_braces{
compatible = "zmk,behavior-macro";
label = "macro_braces";
#binding-cells = <0>;
bindings = <&kp LBRC>, <&kp RBRC>, <&kp LEFT>;
};
macro_parens: macro_parens{
compatible = "zmk,behavior-macro";
label = "macro_parens";
#binding-cells = <0>;
bindings = <&kp LPAR>, <&kp RPAR>, <&kp LEFT>;
};
macro_brackets: macro_brackets{
compatible = "zmk,behavior-macro";
label = "macro_brackets";
#binding-cells = <0>;
bindings = <&kp LBKT>, <&kp RBKT>, <&kp LEFT>;
};
macro_kinesis: macro_kinesis{
compatible = "zmk,behavior-macro";
label = "macro_kinesis";
#binding-cells = <0>;
bindings = <&kp LS(K)>, <&kp I>, <&kp N>, <&kp E>, <&kp S>, <&kp I>, <&kp S>;
};
macro_alari: macro_alari{
compatible = "zmk,behavior-macro";
label = "macro_alari";
#binding-cells = <0>;
bindings = <&kp LS(A)>, <&kp L>, <&kp A>, <&kp R>, <&kp I>;
};
macro_copy: macro_copy{
compatible = "zmk,behavior-macro";
label = "macro_copy";
#binding-cells = <0>;
bindings = <&kp LC(C)>;
};
macro_paste: macro_paste{
compatible = "zmk,behavior-macro";
label = "macro_paste";
#binding-cells = <0>;
bindings = <&kp LC(V)>;
};
macro_cut: macro_cut{
compatible = "zmk,behavior-macro";
label = "macro_cut";
#binding-cells = <0>;
bindings = <&kp LC(X)>;
};
macro_undo: macro_undo{
compatible = "zmk,behavior-macro";
label = "macro_undo";
#binding-cells = <0>;
bindings = <&kp LC(Z)>;
};
macro_select_all: macro_select_all{
compatible = "zmk,behavior-macro";
label = "macro_select_all";
#binding-cells = <0>;
bindings = <&kp LC(A)>;
};
macro_alt_tab: macro_alt_tab{
compatible = "zmk,behavior-macro";
label = "macro_alt_tab";
#binding-cells = <0>;
bindings = <&kp LA(TAB)>;
};
macro_alt_s_tab: macro_alt_s_tab{
compatible = "zmk,behavior-macro";
label = "macro_alt_s_tab";
#binding-cells = <0>;
bindings = <&kp LS(LA(TAB))>;
};
macro_alt_q: macro_alt_q{
compatible = "zmk,behavior-macro";
label = "macro_alt_q";
#binding-cells = <0>;
bindings = <&kp LA(Q)>;
};
macro_gui_left: macro_gui_left{
compatible = "zmk,behavior-macro";
label = "macro_gui_left";
#binding-cells = <0>;
bindings = <&kp LG(LEFT)>;
};
macro_gui_right: macro_gui_right{
compatible = "zmk,behavior-macro";
label = "macro_gui_right";
#binding-cells = <0>;
bindings = <&kp LG(RIGHT)>;
};
macro_gui_up: macro_gui_up{
compatible = "zmk,behavior-macro";
label = "macro_gui_up";
#binding-cells = <0>;
bindings = <&kp LG(UP)>;
};
macro_gui_down: macro_gui_down{
compatible = "zmk,behavior-macro";
label = "macro_gui_down";
#binding-cells = <0>;
bindings = <&kp LG(DOWN)>;
};
macro_new_desktop: macro_new_desktop{
compatible = "zmk,behavior-macro";
label = "macro_new_desktop";
#binding-cells = <0>;
bindings = <&kp LG(LC(D))>;
};
macro_close_desktop: macro_close_desktop{
compatible = "zmk,behavior-macro";
label = "macro_close_desktop";
#binding-cells = <0>;
bindings = <&kp LG(LC(F4))>;
};
macro_desktop_left: macro_desktop_left{
compatible = "zmk,behavior-macro";
label = "macro_desktop_left";
#binding-cells = <0>;
bindings = <&kp LG(LC(LEFT))>;
};
macro_desktop_right: macro_desktop_right{
compatible = "zmk,behavior-macro";
label = "macro_desktop_right";
#binding-cells = <0>;
bindings = <&kp LG(LC(RIGHT))>;
};
macro_ctrl_shift_esc: macro_ctrl_shift_esc{
compatible = "zmk,behavior-macro";
label = "macro_ctrl_shift_esc";
#binding-cells = <0>;
bindings = <&kp LC(LS(ESC))>;
};
macro_shift_sqt: macro_shift_sqt{
compatible = "zmk,behavior-macro";
label = "macro_shift_sqt";
#binding-cells = <0>;
bindings = <&kp LS(SQT)>;
};
macro_shift_w: macro_shift_w{
compatible = "zmk,behavior-macro";
label = "macro_shift_w";
#binding-cells = <0>;
bindings = <&kp LS(W)>;
};
macro_sqt: macro_sqt{
compatible = "zmk,behavior-macro";
label = "macro_sqt";
#binding-cells = <0>;
bindings = <&kp SQT>;
};
macro_lbkt: macro_lbkt{
compatible = "zmk,behavior-macro";
label = "macro_lbkt";
#binding-cells = <0>;
bindings = <&kp LBKT>;
};
macro_rbkt: macro_rbkt{
compatible = "zmk,behavior-macro";
label = "macro_rbkt";
#binding-cells = <0>;
bindings = <&kp RBKT>;
};
macro_non_us_backslash: macro_non_us_backslash{
compatible = "zmk,behavior-macro";
label = "macro_non_us_backslash";
#binding-cells = <0>;
bindings = <&kp NON_US_BACKSLASH>;
};
macro_equal: macro_equal{
compatible = "zmk,behavior-macro";
label = "macro_equal";
#binding-cells = <0>;
bindings = <&kp EQUAL>;
};