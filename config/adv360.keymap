
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    comma_tilde: comma_tilde {
                compatible = "zmk,behavior-mod-morph";
                label = "comma_tilde";
                #binding-cells = <0>;
                bindings = <&kp COMMA>, <&kp TILDE>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    double_quotes_less_than: double_quotes_less_than {
                compatible = "zmk,behavior-mod-morph";
                label = "double_quotes_less_than";
                #binding-cells = <0>;
                bindings = <&kp DOUBLE_QUOTES>, <&kp LESS_THAN>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    sqt_greater_than: sqt_greater_than {
                compatible = "zmk,behavior-mod-morph";
                label = "sqt_greater_than";
                #binding-cells = <0>;
                bindings = <&kp SQT>, <&kp GREATER_THAN>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    bslh_pipe: bslh_pipe {
                compatible = "zmk,behavior-mod-morph";
                label = "bslh_pipe";
                #binding-cells = <0>;
                bindings = <&kp BSLH>, <&kp PIPE>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    fslh_caret: fslh_caret {
                compatible = "zmk,behavior-mod-morph";
                label = "fslh_caret";
                #binding-cells = <0>;
                bindings = <&macro_fslh>, <&macro_caret>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    dollar_grave: dollar_grave {
                compatible = "zmk,behavior-mod-morph";
                label = "dollar_grave";
                #binding-cells = <0>;
                bindings = <&kp DOLLAR>, <&kp GRAVE>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    semi_hash: semi_hash {
                compatible = "zmk,behavior-mod-morph";
                label = "semi_hash";
                #binding-cells = <0>;
                bindings = <&kp SEMI>, <&kp HASH>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    colon_question: colon_question {
                compatible = "zmk,behavior-mod-morph";
                label = "colon_question";
                #binding-cells = <0>;
                bindings = <&kp COLON>, <&kp QUESTION>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    dot_ampersand: dot_ampersand {
                compatible = "zmk,behavior-mod-morph";
                label = "dot_ampersand";
                #binding-cells = <0>;
                bindings = <&kp DOT>, <&kp AMPERSAND>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    hash_tilde: hash_tilde {
                compatible = "zmk,behavior-mod-morph";
                label = "hash_tilde";
                #binding-cells = <0>;
                bindings = <&kp HASH>, <&kp TILDE>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    percent_at: percent_at {
                compatible = "zmk,behavior-mod-morph";
                label = "percent_at";
                #binding-cells = <0>;
                bindings = <&kp PERCENT>, <&kp AT>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
       };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &hash_tilde  &percent_at    &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &macro_plus  &macro_underscore               &to 1                                                                         &mo 4  &macro_underscore  &kp ASTRK  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &macro_equal      &kp EXCL
        &kp TAB    &comma_tilde  &double_quotes_less_than               &sqt_greater_than     &kp P           &kp Y            &macro_colon                                                                      &macro_semi           &kp F      &kp G                  &kp C            &kp R      &kp L      &bslh_pipe
        &kp ESC        &kp A             &kp O                 &kp E     &kp U           &kp I             &macro_fslh  &macro_lctrl_mo_1     &mo 3   &none   &none     &mo 3  &macro_rctrl_mo_1  &macro_dollar           &kp D      &kp H                  &kp T            &kp N      &kp S  &macro_minus
 &macro_lshift_mo_6      &dot_ampersand             &kp Q                 &kp J     &kp K           &kp X                &none              &none  &macro_lalt_mo_1   &none   &none  &macro_ralt_mo_1      &none       &none           &kp B      &kp M                  &kp W            &kp V      &kp Z     &macro_rshift_mo_7
    &macro_minus     &kp LEFT        &kp RIGHT            &macro_dollar  &macro_semi                            &kp SPACE          &kp ENTER  &macro_lgui_mo_1                 &macro_rgui_mo_1   &kp BSPC       &sl 5                  &macro_colon               &macro_fslh         &kp DOWN     &kp UP   &key_repeat
            >;
        };

        layer_original {
            bindings = <
 &kp EQUAL      &kp N1    &kp N2        &kp N3     &kp N4      &kp N5              &to 0                                                                 &mo 4  &kp N6     &kp N7     &kp N8       &kp N9     &kp N0       &kp MINUS
   &kp TAB      &kp Q     &kp W         &kp E      &kp R       &kp T               &none                                                                 &mo 0   &kp Y      &kp U      &kp I        &kp O      &kp P        &kp BSLH
   &kp ESC      &kp A     &kp S         &kp D      &kp F       &kp G               &none      &kp LCTRL  &mo 3   &none   &none   &mo 3  &kp RCTRL      &none   &kp H  &kp J      &kp K        &kp L      &kp SEMI     &kp SQT
 &kp LSHFT      &kp Z     &kp X         &kp C      &kp V       &kp B               &none      &none  &kp LALT   &none   &none  &kp RALT      &none      &none   &kp N      &kp M      &kp COMMA    &kp DOT    &kp FSLH     &kp RSHFT
     &mo 3      &kp LEFT  &kp RIGHT     &kp GRAVE  &kp CAPS                        &kp SPACE   &kp ENTER   &kp LGUI                  &kp RGUI  &kp BSPC  &sl 5            &kp LBKT  &kp RBKT     &kp DOWN     &kp UP     &mo 3
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 4  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT   &none   &none   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B               &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 3  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 3
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3    &kp F4    &kp F5   &kp F6            &tog 1                                                   &mo 4    &kp F7  &kp F8  &kp F9   &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans    &trans    &trans   &trans            &none                                                    &none    &kp PG_UP  &trans  &trans   &trans   &macro_degree   &trans
 &trans  &trans  &kp HOME  &kp BSPC  &kp DEL  &kp END  &none    &trans  &trans  &none    &none   &trans  &trans  &none   &trans   &kp PG_UP  &trans   &trans   &trans   &trans
 &trans  &trans  &trans    &trans    &trans   &trans            &none   &none   &trans   &none   &none   &trans  &none   &none    &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans    &trans    &trans                     &trans  &trans  &trans                   &trans  &trans  &trans           &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_hexpad {
            bindings = <
     &trans  &trans     &trans    &trans     &trans    &trans            &trans                                                  &trans    &trans  &trans  &trans  &trans  &trans     &trans
     &kp AT   &kp A      &kp B     &kp C      &kp D    &kp LBKT            &trans                                                  &trans    &kp RBKT  &kp N2  &kp N3  &kp N4  &kp N5     &trans
     &macro_ctrl_f11   &kp E      &kp F    &kp N0     &kp N1  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp COLON  &kp N6  &kp N7  &kp N8  &kp N9     &trans
 &kp LSHFT  &trans  &kp COMMA    &trans     &trans    &macro_s_caron            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &macro_z_caron  &macro_o_tilde  &macro_a_dqt  &macro_o_dqt  &macro_u_dqt  &kp RSHFT
     &trans  &trans     &trans  &kp PLUS  &kp MINUS                      &trans  &trans  &trans                  &trans  &trans  &trans            &kp HASH  &kp ASTRK  &trans  &trans     &trans
            >;
        };

        layer_left_shift {
            bindings = <
 &trans      &trans  &trans  &trans               &trans       &trans            &tog 1                                                        &mo 4                &trans  &trans           &trans         &trans   &trans   &trans
 &trans      &trans  &trans  &trans               &trans       &trans            &macro_question                                               &macro_hash          &trans  &trans           &trans         &trans   &trans   &trans
 &trans      &trans  &trans  &trans               &trans       &trans            &macro_caret  &trans  &trans   &none   &none  &trans  &trans  &macro_grave_lshft   &trans  &trans           &trans         &trans   &trans   &trans
 &caps_word  &trans  &trans  &trans               &trans       &trans            &none         &none   &trans   &none   &none  &trans  &none   &none                &trans  &trans           &trans         &trans   &trans   &caps_word
 &trans      &trans  &trans  &macro_grave_lshft   &macro_hash                    &trans        &trans  &trans                  &trans  &trans  &trans                       &macro_question  &macro_caret   &trans   &trans   &trans
            >;
        };
        layer_right_shift {
            bindings = <
 &trans      &trans  &trans  &trans               &trans       &trans            &tog 1                                                        &mo 4                &trans  &trans           &trans         &trans   &trans   &trans
 &trans      &trans  &trans  &trans               &trans       &trans            &macro_question                                               &macro_hash          &trans  &trans           &trans         &trans   &trans   &trans
 &trans      &trans  &trans  &trans               &trans       &trans            &macro_caret  &trans  &trans   &none   &none  &trans  &trans  &macro_grave_rshft   &trans  &trans           &trans         &trans   &trans   &trans
 &caps_word  &trans  &trans  &trans               &trans       &trans            &none         &none   &trans   &none   &none  &trans  &none   &none                &trans  &trans           &trans         &trans   &trans   &caps_word
 &trans      &trans  &trans  &macro_grave_rshft   &macro_hash                    &trans        &trans  &trans                  &trans  &trans  &trans                       &macro_question  &macro_caret   &trans   &trans   &trans
            >;
        };
    };
};
