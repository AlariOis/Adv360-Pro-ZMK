
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
         &kp POUND  &kp PERCENT    &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp PLUS  &kp UNDERSCORE               &tog 1                                                                 &mo 4  &kp UNDERSCORE  &kp ASTRK  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp EQUAL      &kp EXCL
 &kp DOUBLE_QUOTES    &kp COMMA  &macro_shift_sqt               &kp SQT     &kp P           &kp Y            &kp COLON                                                              &kp SEMI           &kp F      &kp G                  &kp C            &kp R      &kp L      &kp BSLH
           &kp ESC        &kp A             &kp O                 &kp E     &kp U           &kp I             &kp FSLH  &kp LCTRL     &mo 3   &none   &none     &mo 3  &kp RCTRL  &kp DOLLAR           &kp D      &kp H                  &kp T            &kp N      &kp S  &macro_minus
             &sl 5      &kp DOT             &kp Q                 &kp J     &kp K           &kp X                &none      &none  &kp LALT   &none   &none  &kp RALT      &none       &none           &kp B      &kp M                  &kp W            &kp V      &kp Z     &kp RSHFT
       &key_repeat     &kp LEFT         &kp RIGHT            &kp DOLLAR  &kp SEMI                            &kp SPACE  &kp ENTER  &kp LGUI                  &kp RGUI   &kp BSPC       &sl 6                  &kp COLON               &kp FSLH         &kp DOWN     &kp UP         &mo 6
            >;
        };

        layer_original {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &tog 0                                                                 &mo 4  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &mo 0   &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT   &none   &none   &kp LGUI  &kp RCTRL      &none   &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B               &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
     &mo 3  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT      &mo 3
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 4  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT   &none   &none   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B               &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 3  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 3
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 4  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans   &none   &none  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_shift {
            bindings = <
 &kp TILDE2          &kp AT              &trans            &trans    &trans  &trans                  &trans                                                          &trans  &trans        &trans     &trans  &trans  &trans          &trans
     &trans       &kp TILDE       &kp LESS_THAN  &kp GREATER_THAN    &trans  &trans            &kp QUESTION                                                        &kp HASH  &trans        &trans     &trans  &trans  &trans        &kp PIPE
     &trans  &macro_shift_a  &macro_shift_comma            &trans    &trans  &trans               &kp CARET  &trans  &trans  &trans  &trans  &trans  &trans  &kp APOSTROPHE  &trans        &trans     &trans  &trans  &trans  &kp UNDERSCORE
 &caps_word   &kp AMPERSAND        &macro_comma            &trans    &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans        &trans     &trans  &trans  &trans      &caps_word
 &kp LSHIFT          &trans              &trans    &kp APOSTROPHE  &kp HASH                          &trans  &trans  &trans                  &trans  &trans          &trans          &kp QUESTION  &kp CARET  &trans  &trans          &trans
            >;
        };

        layer_hexpad {
            bindings = <
     &trans  &trans     &trans    &trans     &trans    &trans            &trans                                                  &trans    &trans  &trans  &trans  &trans  &trans     &trans
     &trans   &kp A      &kp B     &kp C      &kp D    &trans            &trans                                                  &trans    &trans  &kp N2  &kp N3  &kp N4  &kp N5     &trans
     &trans   &kp E      &kp F    &kp N0     &kp N1  &kp LBKT            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp RBKT  &kp N6  &kp N7  &kp N8  &kp N9     &trans
 &kp LSHIFT  &trans  &kp COMMA    &trans     &trans    &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &kp RSHFT
     &trans  &trans     &trans  &kp PLUS  &kp MINUS                      &trans  &trans  &trans                  &trans  &trans  &trans            &trans  &trans  &trans  &trans     &trans
            >;
        };

        layer_caps_word {
            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans      &trans
    &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans      &trans
    &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans
     &none  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans       &none
 &kp LSHFT  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &kp RSHIFT
            >;
        };

    };
};
